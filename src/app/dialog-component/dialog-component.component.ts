import {Component, Inject, OnInit} from '@angular/core';
import {FormControl, FormGroup, Validators} from "@angular/forms";
import {ApiService} from "../services/api.service";
import {ActivatedRoute} from "@angular/router";
import {MAT_DIALOG_DATA, MatDialogRef} from "@angular/material/dialog";

@Component({
  selector: 'app-dialog-component',
  templateUrl: './dialog-component.component.html',
  styleUrl: './dialog-component.component.css'
})
export class DialogComponentComponent implements OnInit{
  actionBtn: string = "Save"
  questionForm! : FormGroup;
  gameId!: number;
  constructor(
    private api: ApiService,
    private route: ActivatedRoute,
    private dialogRef: MatDialogRef<DialogComponentComponent>,
    @Inject(MAT_DIALOG_DATA) public data: any
  ) {}

  ngOnInit(): void {
    this.questionForm = new FormGroup({
      difficulty: new FormControl('', Validators.required),
      problem: new FormControl('', Validators.required),
      answer: new FormControl('', Validators.required)
    });

    console.log('Data:', this.data)

    if(this.data){
      this.gameId= this.data.gameId;
    }
      console.log('Game ID:', this.gameId)
  }

  addQuestionForm() {
    if (this.questionForm.valid) {
      const payload = {
        questionId: 0, // Assuming this is generated by the backend
        quiz: {
          quizId: 0, // Assuming this is generated by the backend or handled differently
          difficulty: this.questionForm.value.difficulty,
          game: {
            gameId: this.gameId,
            gameType: "", // Assuming this is handled by the backend or is not required for the operation
            score: 0 // Assuming this is handled by the backend or is not required for the operation
          },
          gameId: this.gameId,
          questions: [
            this.questionForm.value.problem // Assuming this structure is correct, though it seems like it might be an oversight
          ]
        },
        quizId: 0, // Assuming this is generated by the backend or handled differently
        problem: this.questionForm.value.problem,
        answer: this.questionForm.value.answer
      };

      this.api.postQuestion(payload).subscribe({
        next: (res) => {
          console.log('Question added successfully', res);
          this.dialogRef.close(); // Close the dialog on success
        },
        error: (err) => {
          console.error('Error adding question', err);
        }
      });
    }

  }
}
